<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cardboardci on jrbeverly</title><link>/tags/cardboardci/</link><description>Recent content in cardboardci on jrbeverly</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 20 Apr 2020 03:31:14 +0000</lastBuildDate><atom:link href="/tags/cardboardci/index.xml" rel="self" type="application/rss+xml"/><item><title>dockerfiles</title><link>/2020/04/cardboardci-dockerfiles/</link><pubDate>Mon, 20 Apr 2020 03:31:14 +0000</pubDate><guid>/2020/04/cardboardci-dockerfiles/</guid><description>Dockerfiles for &lt;a href="https://hub.docker.com/r/cardboardci">CardboardCI&amp;rsquo;s Docker images&lt;/a>.</description></item><item><title>bazel-docker-awscli</title><link>/2019/11/cardboardci-bazel-docker-awscli/</link><pubDate>Tue, 26 Nov 2019 22:15:52 +0000</pubDate><guid>/2019/11/cardboardci-bazel-docker-awscli/</guid><description>&lt;blockquote>
&lt;p>The AWS Command Line Interface (CLI) is a unified tool to manage your AWS services. With just one tool to download and configure, you can control multiple AWS services from the command line and automate them through scripts. CardboardCI aims to create a collection of docker images that can be used in continuous integration. These images will have all dependencies pinned, to ensure that any commit will produce the exact same image (or as close to as possible). The aim of this repository is to build &lt;a href="https://github.com/cardboardci/docker-awscli">docker-awscli&lt;/a> in Bazel, to evaluate whether it would help fit those goals. Additionally it helps to test whether Bazel could work under GitHub Actions, or would require another service to build.&lt;/p>
&lt;/blockquote></description></item><item><title>docker-markdownlint</title><link>/2019/10/cardboardci-docker-markdownlint/</link><pubDate>Sun, 27 Oct 2019 02:34:03 +0000</pubDate><guid>/2019/10/cardboardci-docker-markdownlint/</guid><description>A tool to check markdown files and flag style issues. To have markdownlint check your markdown files, simply run mdl with the filenames as a parameter: &lt;code>bash mdl README.md &lt;/code> Markdownlint can also take a directory, and it will scan all markdown files within the directory (and nested directories): &lt;code>bash mdl docs/ &lt;/code> You can see the cli reference &lt;a href="https://github.com/markdownlint/markdownlint">here&lt;/a>.</description></item><item><title>docker-ci-core</title><link>/2019/10/cardboardci-docker-ci-core/</link><pubDate>Sun, 27 Oct 2019 02:27:12 +0000</pubDate><guid>/2019/10/cardboardci-docker-ci-core/</guid><description>CI-core is a special Docker image that is configured for running in CI environments. It is Ubuntu, with: - A docker user - A directory workspace - Mechanisms for running build tools (json, web requests, etc)</description></item><item><title>docker-cppcheck</title><link>/2019/10/cardboardci-docker-cppcheck/</link><pubDate>Sun, 27 Oct 2019 02:27:01 +0000</pubDate><guid>/2019/10/cardboardci-docker-cppcheck/</guid><description>Cppcheck is an analysis tool for C/C++ code. It provides unique code analysis to detect bugs and focuses on detecting undefined behaviour and dangerous coding constructs. The goal is to detect only real errors in the code (i.e. have very few false positives). You can see the source repository &lt;a href="https://github.com/danmar/cppcheck">here&lt;/a>.</description></item><item><title>docker-dbxcli</title><link>/2019/10/cardboardci-docker-dbxcli/</link><pubDate>Sun, 27 Oct 2019 02:26:48 +0000</pubDate><guid>/2019/10/cardboardci-docker-dbxcli/</guid><description>A command line client for Dropbox built using the Go SDK bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Supports basic file operations like ls, cp, mkdir, mv (via the Files API) bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Supports search bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Supports file revisions and file restore bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Chunked uploads for large files, paginated listing for large directories bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Supports a growing set of Team operations You can see the source repository &lt;a href="https://github.com/dropbox/dbxcli">here&lt;/a>.</description></item><item><title>docker-htmlhint</title><link>/2019/10/cardboardci-docker-htmlhint/</link><pubDate>Sun, 27 Oct 2019 02:25:50 +0000</pubDate><guid>/2019/10/cardboardci-docker-htmlhint/</guid><description>The static code analysis tool you need for your HTML. You can see the source repository &lt;a href="https://github.com/htmlhint/HTMLHint">here&lt;/a>.</description></item><item><title>docker-luacheck</title><link>/2019/10/cardboardci-docker-luacheck/</link><pubDate>Sun, 27 Oct 2019 02:25:40 +0000</pubDate><guid>/2019/10/cardboardci-docker-luacheck/</guid><description>Luacheck is a static analyzer and a linter for Lua. Luacheck detects various issues such as usage of undefined global variables, unused variables and values, accessing uninitialized variables, unreachable code and more. Most aspects of checking are configurable: there are options for defining custom project-related globals, for selecting set of standard globals (version of Lua standard library), for filtering warnings by type and name of related variable, etc. The options can be used on the command line, put into a config or directly into checked files as Lua comments. You can see the cli reference &lt;a href="https://github.com/mpeterv/luacheck">here&lt;/a>.</description></item><item><title>docker-pylint</title><link>/2019/10/cardboardci-docker-pylint/</link><pubDate>Sun, 27 Oct 2019 02:25:18 +0000</pubDate><guid>/2019/10/cardboardci-docker-pylint/</guid><description>Pylint is a Python static code analysis tool which looks for programming errors, helps enforcing a coding standard, sniffs for code smells and offers simple refactoring suggestions. It&amp;rsquo;s highly configurable, having special pragmas to control its errors and warnings from within your code, as well as from an extensive configuration file. It is also possible to write your own plugins for adding your own checks or for extending pylint in one way or another. You can see the cli reference &lt;a href="https://github.com/PyCQA/pylint/">here&lt;/a>.</description></item><item><title>docker-rsvg</title><link>/2019/10/cardboardci-docker-rsvg/</link><pubDate>Sun, 27 Oct 2019 02:25:06 +0000</pubDate><guid>/2019/10/cardboardci-docker-rsvg/</guid><description>A utility to render Scalable Vector Graphics (SVG), associated with the GNOME Project. It renders SVG files to Cairo surfaces. Cairo is the 2D, antialiased drawing library that GNOME uses to draw things to the screen or to generate output for printing. You can see the cli reference &lt;a href="https://github.com/GNOME/librsvg">here&lt;/a>.</description></item><item><title>docker-rubocop</title><link>/2019/10/cardboardci-docker-rubocop/</link><pubDate>Sun, 27 Oct 2019 02:24:56 +0000</pubDate><guid>/2019/10/cardboardci-docker-rubocop/</guid><description>RuboCop is a Ruby static code analyzer and code formatter. Out of the box it will enforce many of the guidelines outlined in the community Ruby Style Guide. RuboCop is extremely flexible and most aspects of its behavior can be tweaked via various configuration options. You can see the cli reference &lt;a href="https://github.com/rubocop-hq/rubocop">here&lt;/a>.</description></item><item><title>docker-stylelint</title><link>/2019/10/cardboardci-docker-stylelint/</link><pubDate>Sun, 27 Oct 2019 02:24:42 +0000</pubDate><guid>/2019/10/cardboardci-docker-stylelint/</guid><description>A mighty, modern linter that helps you avoid errors and enforce conventions in your styles. It&amp;rsquo;s mighty because it: bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE understands the latest CSS syntax including custom properties and level 4 selectors bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE extracts embedded styles from HTML, markdown and CSS-in-JS object &amp;amp; template literals bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE parses CSS-like syntaxes like SCSS, Sass, Less and SugarSS bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE has over 170 built-in rules to catch errors, apply limits and enforce stylistic conventions bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE supports plugins so you can create your own rules or make use of plugins written by the community bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE automatically fixes some violations (experimental feature) bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE is well tested with over 10000 unit tests bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE supports shareable configs that you can extend or create your own of bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE is unopinionated so you can tailor the linter to your exact needs You can see the cli reference &lt;a href="https://github.com/stylelint/stylelint">here&lt;/a>.</description></item><item><title>readme</title><link>/2019/10/cardboardci-readme/</link><pubDate>Sun, 27 Oct 2019 02:06:14 +0000</pubDate><guid>/2019/10/cardboardci-readme/</guid><description>A collection of docker images that provide a common core for use in continuous integration. The idea of these images is to balance the following: - Frequency of updates - Standard set of tooling - Common Environment</description></item><item><title>slim-docker-with-gitlab</title><link>/2019/10/cardboardci-slim-docker-with-gitlab/</link><pubDate>Sat, 05 Oct 2019 20:39:56 +0000</pubDate><guid>/2019/10/cardboardci-slim-docker-with-gitlab/</guid><description>A GitlabCI repository designed to experiment with potential avenues for minimizing the size of a build image.</description></item><item><title>docker-wkhtmltopdf</title><link>/2019/03/cardboardci-docker-wkhtmltopdf/</link><pubDate>Sat, 02 Mar 2019 18:00:13 +0000</pubDate><guid>/2019/03/cardboardci-docker-wkhtmltopdf/</guid><description>wkhtmltopdf and wkhtmltoimage are open source (LGPLv3) command line tools to render HTML into PDF and various image formats using the Qt WebKit rendering engine. These run entirely &amp;ldquo;headless&amp;rdquo; and do not require a display or display service. You can see the cli reference &lt;a href="https://github.com/wkhtmltopdf/wkhtmltopdf">here&lt;/a>.</description></item><item><title>docker-svgtools</title><link>/2019/03/cardboardci-docker-svgtools/</link><pubDate>Sat, 02 Mar 2019 17:59:57 +0000</pubDate><guid>/2019/03/cardboardci-docker-svgtools/</guid><description>SVG Tools are a collection of tools for working with vector graphics. You can see the cli reference &lt;a href="https://github.com/inkscape/inkscape">here&lt;/a>.</description></item><item><title>docker-surge</title><link>/2019/03/cardboardci-docker-surge/</link><pubDate>Sat, 02 Mar 2019 17:59:56 +0000</pubDate><guid>/2019/03/cardboardci-docker-surge/</guid><description>This is the CLI client for the surge.sh hosted service. It’s what gets installed when you run &lt;code>npm install -g surge&lt;/code>. This CLI library manages access tokens locally and handles the upload and subsequent reporting when you publish a project using surge. You can see the cli reference &lt;a href="https://github.com/sintaxi/surge">here&lt;/a>.</description></item><item><title>docker-shellcheck</title><link>/2019/03/cardboardci-docker-shellcheck/</link><pubDate>Sat, 02 Mar 2019 17:59:54 +0000</pubDate><guid>/2019/03/cardboardci-docker-shellcheck/</guid><description>ShellCheck is a GPLv3 tool that gives warnings and suggestions for bash/sh shell scripts: The goals of ShellCheck are: bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE To point out and clarify typical beginner&amp;rsquo;s syntax issues that cause a shell to give cryptic error messages. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE To point out and clarify typical intermediate level semantic problems that cause a shell to behave strangely and counter-intuitively. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE To point out subtle caveats, corner cases and pitfalls that may cause an advanced user&amp;rsquo;s otherwise working script to fail under future circumstances. You can see the cli reference &lt;a href="https://github.com/koalaman/shellcheck">here&lt;/a>.</description></item><item><title>docker-psscriptanalyzer</title><link>/2019/03/cardboardci-docker-psscriptanalyzer/</link><pubDate>Sat, 02 Mar 2019 17:59:53 +0000</pubDate><guid>/2019/03/cardboardci-docker-psscriptanalyzer/</guid><description>PSScriptAnalyzer is a static code checker for Windows PowerShell modules and scripts. PSScriptAnalyzer checks the quality of Windows PowerShell code by running a set of rules. The rules are based on PowerShell best practices identified by PowerShell Team and the community. It generates DiagnosticResults (errors and warnings) to inform users about potential code defects and suggests possible solutions for improvements. You can see the cli reference &lt;a href="https://github.com/PowerShell/PSScriptAnalyzer">here&lt;/a>.</description></item><item><title>docker-pdftools</title><link>/2019/03/cardboardci-docker-pdftools/</link><pubDate>Sat, 02 Mar 2019 17:59:51 +0000</pubDate><guid>/2019/03/cardboardci-docker-pdftools/</guid><description>Scientific articles are typically locked away in PDF format, a format designed primarily for printing but not so great for searching or indexing. The new pdftools package allows for extracting text and metadata from pdf files in R. From the extracted plain-text one could find articles discussing a particular drug or species name, without having to rely on publishers providing metadata, or pay-walled search engines. You can see the cli reference &lt;a href="https://github.com/ropensci/pdftools">here&lt;/a>.</description></item><item><title>docker-pdf2htmlex</title><link>/2019/03/cardboardci-docker-pdf2htmlex/</link><pubDate>Sat, 02 Mar 2019 17:59:49 +0000</pubDate><guid>/2019/03/cardboardci-docker-pdf2htmlex/</guid><description>pdf2htmlEX renders PDF files in HTML, utilizing modern Web technologies. Academic papers with lots of formulas and figures? Magazines with complicated layouts? No problem! Features: bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Native HTML text with precise font and location. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Flexible output: all-in-one HTML or on demand page loading (needs JavaScript). bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Moderate file size, sometimes even smaller than PDF. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE Supporting links, outlines (bookmarks), printing, SVG background, Type 3 fonts and more. You can see the cli reference &lt;a href="https://github.com/coolwanglu/pdf2htmlEX">here&lt;/a>.</description></item><item><title>docker-netlify</title><link>/2019/03/cardboardci-docker-netlify/</link><pubDate>Sat, 02 Mar 2019 17:59:48 +0000</pubDate><guid>/2019/03/cardboardci-docker-netlify/</guid><description>The Netlify CLI facilitates the deployment of websites to Netlify, to improve the site building experience. You can see the cli reference &lt;a href="https://github.com/netlify/cli">here&lt;/a>.</description></item><item><title>docker-latex</title><link>/2019/03/cardboardci-docker-latex/</link><pubDate>Sat, 02 Mar 2019 17:59:46 +0000</pubDate><guid>/2019/03/cardboardci-docker-latex/</guid><description>LaTeX is a high-quality typesetting system; it includes features designed for the production of technical and scientific documentation. LaTeX is the de facto standard for the communication and publication of scientific documents. LaTeX is available as free software. You can see the LaTeX reference &lt;a href="https://www.tug.org/begin.html">here&lt;/a>.</description></item><item><title>docker-hugo</title><link>/2019/03/cardboardci-docker-hugo/</link><pubDate>Sat, 02 Mar 2019 17:59:45 +0000</pubDate><guid>/2019/03/cardboardci-docker-hugo/</guid><description>Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again. You can see the cli reference &lt;a href="https://github.com/gohugoio/hugo/">here&lt;/a>.</description></item><item><title>docker-gitlab</title><link>/2019/03/cardboardci-docker-gitlab/</link><pubDate>Sat, 02 Mar 2019 17:59:42 +0000</pubDate><guid>/2019/03/cardboardci-docker-gitlab/</guid><description>What is GitLabCLI ? bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE It&amp;rsquo;s a cross platform GitLab command line tool to quickly &amp;amp; naturally perform frequent tasks on GitLab project. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE It does not force you to hand craft json or use other unnatural ways (for example ids, concatenating of strings) like other CLI&amp;rsquo;s to interact with GitLab. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE It does not have any dependencies. bazel BUILD.bazel docs icon outputs README.md scripts srv WORKSPACE It&amp;rsquo;s self contained .NET core application - you don&amp;rsquo;t need to have .NET installed for it to work. You can see the source repository &lt;a href="https://github.com/nmklotas/GitLabCLI">here&lt;/a>.</description></item><item><title>docker-ecr</title><link>/2019/03/cardboardci-docker-ecr/</link><pubDate>Sat, 02 Mar 2019 17:59:40 +0000</pubDate><guid>/2019/03/cardboardci-docker-ecr/</guid><description>The AWS Command Line Interface (CLI) is a unified tool to manage your AWS services. With just one tool to download and configure, you can control multiple AWS services from the command line and automate them through scripts. This container includes docker, allowing deployments to Amazon Elastic Container Registry (ECR), a fully-managed Docker container registry. You can see the cli reference &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ecr/index.html">here&lt;/a>.</description></item><item><title>docker-bats</title><link>/2019/03/cardboardci-docker-bats/</link><pubDate>Sat, 02 Mar 2019 17:59:39 +0000</pubDate><guid>/2019/03/cardboardci-docker-bats/</guid><description>Bats is a TAP-compliant testing framework for Bash. It provides a simple way to verify that the UNIX programs you write behave as expected. A Bats test file is a Bash script with special syntax for defining test cases. Under the hood, each test case is just a function with a description. ```bash</description></item><item><title>docker-awscli</title><link>/2019/03/cardboardci-docker-awscli/</link><pubDate>Sat, 02 Mar 2019 17:59:37 +0000</pubDate><guid>/2019/03/cardboardci-docker-awscli/</guid><description>The AWS Command Line Interface (CLI) is a unified tool to manage your AWS services. With just one tool to download and configure, you can control multiple AWS services from the command line and automate them through scripts. You can see the cli reference &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/">here&lt;/a>.</description></item><item><title>docker-github</title><link>/2019/03/cardboardci-docker-github/</link><pubDate>Sat, 02 Mar 2019 17:58:39 +0000</pubDate><guid>/2019/03/cardboardci-docker-github/</guid><description>&lt;code>hub&lt;/code> is an extension to command-line git that helps you do everyday GitHub tasks without ever leaving the terminal. &lt;code>hub&lt;/code> can be safely aliased as git so you can type &lt;code>$ git &amp;lt;command&amp;gt;&lt;/code>in the shell and get all the usual hub features. You can see the source repository &lt;a href="https://github.com/dropbox/dbxcli">here&lt;/a>.</description></item><item><title>docker-hadolint</title><link>/2019/03/cardboardci-docker-hadolint/</link><pubDate>Sat, 02 Mar 2019 17:51:37 +0000</pubDate><guid>/2019/03/cardboardci-docker-hadolint/</guid><description>A smarter Dockerfile linter that helps you build best practice Docker images. The linter is parsing the Dockerfile into an AST and performs rules on top of the AST. It is standing on the shoulders of ShellCheck to lint the Bash code inside RUN instructions. You can see the source repository &lt;a href="https://github.com/hadolint/hadolint">here&lt;/a>.</description></item><item><title>docker-win-awscli</title><link>/2019/02/cardboardci-docker-win-awscli/</link><pubDate>Tue, 26 Feb 2019 17:40:22 +0000</pubDate><guid>/2019/02/cardboardci-docker-win-awscli/</guid><description>A docker image based on Windows containing the awscli.</description></item><item><title>docker-tflint</title><link>/2018/12/cardboardci-docker-tflint/</link><pubDate>Wed, 26 Dec 2018 00:11:06 +0000</pubDate><guid>/2018/12/cardboardci-docker-tflint/</guid><description>TFLint is a Terraform linter focused on possible errors, best practices, etc. You can see the cli reference &lt;a href="https://github.com/terraform-linters/tflint">here&lt;/a>.</description></item><item><title>ci-wkhtmltopdf</title><link>/2018/11/cardboardci-ci-wkhtmltopdf/</link><pubDate>Fri, 02 Nov 2018 00:52:06 +0000</pubDate><guid>/2018/11/cardboardci-ci-wkhtmltopdf/</guid><description>A super small image with &lt;a href="https://wkhtmltopdf.org/">wkhtmltopdf&lt;/a> installed. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>ci-optipng</title><link>/2018/11/cardboardci-ci-optipng/</link><pubDate>Fri, 02 Nov 2018 00:52:03 +0000</pubDate><guid>/2018/11/cardboardci-ci-optipng/</guid><description>A super small Alpine image with OptiPNG installed. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>ci-minify</title><link>/2018/11/cardboardci-ci-minify/</link><pubDate>Fri, 02 Nov 2018 00:52:02 +0000</pubDate><guid>/2018/11/cardboardci-ci-minify/</guid><description>A super small image with Minify. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>vagrant-desktop-docker</title><link>/2017/09/cardboardci-vagrant-desktop-docker/</link><pubDate>Sat, 23 Sep 2017 17:15:34 +0000</pubDate><guid>/2017/09/cardboardci-vagrant-desktop-docker/</guid><description>Provide a method of reproducible graphical development environments based on Linux. This repository provides a base Docker Desktop environment, sandboxed on your local computer.</description></item><item><title>ci-alpine</title><link>/2017/05/cardboardci-ci-alpine/</link><pubDate>Wed, 31 May 2017 23:02:24 +0000</pubDate><guid>/2017/05/cardboardci-ci-alpine/</guid><description>[DEPRECATED] A super small image with basic development libraries installed. Docker Alpine Base Summary A super small image with basic development libraries installed. The project icon is from cre.ativo mustard, HK from the Noun Project
NOTE: This image is marked EOL, and use is discouraged.
Usage You can use this image locally with docker run, calling sh to enter the container:
docker run -it -v /media/:/media/ jrbeverly/alpine:edge sh Gitlab You can setup a build job using .</description></item><item><title>ci-pdf2htmlex</title><link>/2017/05/cardboardci-ci-pdf2htmlex/</link><pubDate>Wed, 31 May 2017 23:02:17 +0000</pubDate><guid>/2017/05/cardboardci-ci-pdf2htmlex/</guid><description>A super small image with pdf2htmlEX installed. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>ci-glibc</title><link>/2017/05/cardboardci-ci-glibc/</link><pubDate>Wed, 31 May 2017 23:02:05 +0000</pubDate><guid>/2017/05/cardboardci-ci-glibc/</guid><description>A super small image with glibc installed, to allow binaries compiled against glibc to work. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>ci-latex</title><link>/2017/05/cardboardci-ci-latex/</link><pubDate>Wed, 31 May 2017 23:01:43 +0000</pubDate><guid>/2017/05/cardboardci-ci-latex/</guid><description>Comprehensive TeX document production system for use as a continuous integration image. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>ci-boilerplate</title><link>/2017/05/cardboardci-ci-boilerplate/</link><pubDate>Wed, 31 May 2017 23:01:35 +0000</pubDate><guid>/2017/05/cardboardci-ci-boilerplate/</guid><description>[DEPRECATED] A boilerplate template for specifying a docker image using the makefile build approach. Boilerplate for Docker Repository Summary A boilerplate template for specifying a docker image using the makefile build approach. The project icon is from cre.ativo mustard, HK from the Noun Project
This model of creating docker image has been deprecated.
Components Metadata Arguments Metadata build arguments used with the Label Schema Convention.</description></item><item><title>ci-baseimage</title><link>/2017/05/cardboardci-ci-baseimage/</link><pubDate>Wed, 31 May 2017 23:01:25 +0000</pubDate><guid>/2017/05/cardboardci-ci-baseimage/</guid><description>[DEPRECATED] A super small image to act as a baseimage for continuous integration images. Docker Baseimage Summary A super small image to act as a baseimage for continuous integration images. The project icon is from cre.ativo mustard, HK from the Noun Project
NOTE: This image is marked EOL, and use is discouraged.
Usage You can use this image locally with docker run, calling sh to enter the container:</description></item><item><title>ci-rsvg</title><link>/2017/05/cardboardci-ci-rsvg/</link><pubDate>Wed, 31 May 2017 23:01:15 +0000</pubDate><guid>/2017/05/cardboardci-ci-rsvg/</guid><description>A super small image with &lt;a href="http://manpages.ubuntu.com/manpages/zesty/man1/rsvg-convert.1.html">librsvg&lt;/a> installed. The project icon is from &lt;a href="docs/icon/icon.json">cre.ativo mustard, HK from the Noun Project&lt;/a> &lt;strong>NOTE: This image is marked EOL, and use is discouraged.&lt;/strong></description></item><item><title>CardboardCI</title><link>/cardboardci/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/cardboardci/readme/</guid><description>A collection of docker images for use in continuous integration. A collection of docker images that provide a common core for use in continuous integration.
The idea of these images is to balance the following:
Frequency of updates Standard set of tooling Common Environment Background Notes I encountered a lot of difficult with trying to automate the updating of those docker images.</description></item></channel></rss>