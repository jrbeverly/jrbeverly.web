<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>org:blockycraft on jrbeverly</title><link>/tags/orgblockycraft/</link><description>Recent content in org:blockycraft on jrbeverly</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 23 May 2020 17:31:06 +0000</lastBuildDate><atom:link href="/tags/orgblockycraft/index.xml" rel="self" type="application/rss+xml"/><item><title>blockycraft</title><link>/2020/05/blockycraft-blockycraft/</link><pubDate>Sat, 23 May 2020 17:31:06 +0000</pubDate><guid>/2020/05/blockycraft-blockycraft/</guid><description>blockycraft Summary Blockycraft is a Minecraft inspired Block Engine written in Unity3D and built using GitHub Actions. The intent of this project is to better learn Unity, and discover some new use cases with GitHub Actions.
The project is available as binary releases for different operating systems, and includes a hosted WebGL version that can be played in supported browsers:
blockycraft.jrbeverly.dev/play
There is no formal feature list or any intentions to carry the project long-term into a fully featured block engine.</description></item><item><title>readme</title><link>/2020/05/blockycraft-readme/</link><pubDate>Thu, 07 May 2020 01:08:13 +0000</pubDate><guid>/2020/05/blockycraft-readme/</guid><description>Blockycraft Summary Blockycraft is a Minecraft inspired Block Engine written in Unity3D and built using GitHub Actions. The intent of this project is to better learn Unity, and discover some new use cases with GitHub Actions.
The project is available as binary releases for different operating systems, and includes a hosted WebGL version that can be played in supported browsers:
blockycraft.jrbeverly.dev/play
There is no formal feature list or any intentions to carry the project long-term into a fully featured block engine.</description></item><item><title>blockycraft-classic</title><link>/2020/01/blockycraft-blockycraft-classic/</link><pubDate>Mon, 13 Jan 2020 00:26:20 +0000</pubDate><guid>/2020/01/blockycraft-blockycraft-classic/</guid><description>Summary Blockycraft is a interactive graphics demo to create a Minecraft inspired demo which revolves around breaking and placing blocks. The game world is composed of rough cubes arranged in a fixed grid pattern and representing different materials, such as dirt, stone, and snow. The techniques used in the demo can be toggled using keyboard commands. The Blockycraft project is written using C++ and OpenGL.
Notes The project was developed for a University of Waterloo Graphics course in Summer 2016.</description></item><item><title>vagrant-desktop-opengl</title><link>/2017/05/blockycraft-vagrant-desktop-opengl/</link><pubDate>Wed, 31 May 2017 22:52:23 +0000</pubDate><guid>/2017/05/blockycraft-vagrant-desktop-opengl/</guid><description>Vagrant OpenGL Desktop Summary Provide a method of reproducible graphical development environments based on Linux. This repository provides a base OpenGL Desktop environment, sandboxed on your local computer. The repository is meant for experimenting with OpenGL related programming in a virtual machine.
Getting Started You can use this locally with vagrant up, calling as such:
vagrant --name=mydesktop up However It is recommended to use the script create.sh for the first run to ensure all necessary arguments are provided.</description></item><item><title>manual-classic</title><link>/2017/05/blockycraft-manual-classic/</link><pubDate>Wed, 31 May 2017 22:51:29 +0000</pubDate><guid>/2017/05/blockycraft-manual-classic/</guid><description>Blockycraft Manual Summary Blockycraft is an interactive graphics demo to create a Minecraft inspired demo. Blockycraft is focused on a series of graphics techniques create the graphical aethestics of a Minecraft world. This involves the usage of Perlin Noise for a dynamic world, lighting and shadows based on the positions of blocks in the world, and the aesthetic of the block world. The Blockycraft Manual explains the Blockycraft project in terms of interactive, compilation and technical components.</description></item></channel></rss>