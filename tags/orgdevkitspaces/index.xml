<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>org:devkitspaces on jrbeverly</title><link>/tags/orgdevkitspaces/</link><description>Recent content in org:devkitspaces on jrbeverly</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 24 Oct 2019 01:48:46 +0000</lastBuildDate><atom:link href="/tags/orgdevkitspaces/index.xml" rel="self" type="application/rss+xml"/><item><title>packer-on-github</title><link>/2019/10/devkitspaces-packer-on-github/</link><pubDate>Thu, 24 Oct 2019 01:48:46 +0000</pubDate><guid>/2019/10/devkitspaces-packer-on-github/</guid><description>Packer with GitHub Actions Experimenting with GitHub Actions for building machine images with Packer. Ideally trying to figure out what it takes for building the following on GitHub Actions:
VirtualBox ISO Hyper-V ISO Docker Image Docker Image A base case. I want to confirm that I am in fact able to use packer without issue on GitHub Actions.
HyperV I have had to do some work with Windows containers recently, and have found them to have performance issues for disk intense work.</description></item><item><title>vagrant-cicd</title><link>/2019/10/devkitspaces-vagrant-cicd/</link><pubDate>Sat, 05 Oct 2019 20:31:43 +0000</pubDate><guid>/2019/10/devkitspaces-vagrant-cicd/</guid><description>Vagrant Continuous Integration Prototype Pre-built Vagrant Box: -vagrant init ubuntu/trusty64
This example vagrant configuration installs and configures Ubuntu Trusty using simple Ruby scripts.
The objective is to move as much of the Vagrantfile configuration into external ruby scripts. These scripts could then be split into testable functions and modules. Currently the focus is on providing a consistent installation process using shellcheck and rubocop.
Aiming to have a simple vagrant example in this repository, and then use GitLab CI to perform linting on the provisioning scripts (shell+ruby).</description></item><item><title>packer-desktop</title><link>/2018/11/devkitspaces-packer-desktop/</link><pubDate>Fri, 02 Nov 2018 00:52:23 +0000</pubDate><guid>/2018/11/devkitspaces-packer-desktop/</guid><description>Packer Desktop Summary This build configuration installs the vagrant-desktop environments onto minimal ubuntu images that can be used with Virtualbox.
Getting Started Make sure all the required software (listed above) is installed, then you can build the images as follows:
# cd x11/ # cd opengl/ # cd base/ packer build ubuntu.json After a few minutes, Packer should tell you the image was generated successfully.
Acknowledgements The project icon is retrieved from the Noun Project.</description></item><item><title>boxstarter-workspace</title><link>/2018/11/devkitspaces-boxstarter-workspace/</link><pubDate>Fri, 02 Nov 2018 00:40:42 +0000</pubDate><guid>/2018/11/devkitspaces-boxstarter-workspace/</guid><description>Boxstarter.Workspace Summary A set of chocolatey packages for setting up a Windows PC.
Getting Started The packages are not available on chocolatey.org, so they will need to be manually built. You can pack them up using the following:
cd src/baseenv choco pack This will create a package.
Acknowledgements The project icon is retrieved from the Noun Project. The original source material has been altered for the purposes of the project. The icon is used under the terms of the Public Domain.</description></item><item><title>vagrant-desktop-homelab</title><link>/2017/09/devkitspaces-vagrant-desktop-homelab/</link><pubDate>Sat, 23 Sep 2017 17:15:23 +0000</pubDate><guid>/2017/09/devkitspaces-vagrant-desktop-homelab/</guid><description>Vagrant Homelab Desktop Summary Provide a method of reproducible graphical development environments based on Linux. This repository provides a base Homelab Desktop environment, sandboxed on your local computer.
Getting Started You can use this locally with vagrant up, calling as such:
vagrant --name=mydesktop up However It is recommended to use the script create.sh for the first run to ensure all necessary arguments are provided. The provided arguments creates a settings.yaml, storing the settings for the machine.</description></item><item><title>boxstarter-scripts</title><link>/2017/05/devkitspaces-boxstarter-scripts/</link><pubDate>Wed, 31 May 2017 22:54:37 +0000</pubDate><guid>/2017/05/devkitspaces-boxstarter-scripts/</guid><description>Automated Windows Setup A script for setting up a Windows PC using BoxStarter and Chocolatey.
Getting Started There are a few options for launching a BoxStarter script check out the offical documentation for all the various methods.
&amp;gt; START http://boxstarter.org/package/nr/url?... Environments Environment Description basic A very simple box standard A common environment that can be used on multiple dev machines fullwin A .</description></item><item><title>vagrant-desktop</title><link>/2017/05/devkitspaces-vagrant-desktop/</link><pubDate>Wed, 31 May 2017 22:52:01 +0000</pubDate><guid>/2017/05/devkitspaces-vagrant-desktop/</guid><description>Vagrant Linux Desktop Summary Provide a method of reproducible graphical development environments based on Linux. This repository provides a base Linux Desktop environment, sandboxed on your local computer.
Getting Started You can use this locally with vagrant up, calling as such:
vagrant --name=mydesktop --file=desktop.yaml up However It is recommended to use the script create.sh for the first run to ensure all necessary arguments are provided. The provided arguments requires a settings.</description></item></channel></rss>